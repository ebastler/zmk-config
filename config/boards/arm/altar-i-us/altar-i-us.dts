/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
	model = "Altar I US, Rev 1";
	compatible = "altarius,rev1";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zmk,battery = &vbatt;
		zmk,kscan = &kscan;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <10>;
		rows = <12>;
		map = <
			RC(0,0)  RC(1,0)  RC(0,1)  RC(1,1)  RC(0,2)  RC(1,2)  RC(0,3)  RC(1,3)  RC(0,4)  RC(1,4)  RC(0,5)  RC(1,5)  RC(0,6)  RC(1,6)          RC(7,6)
			RC(2,0)  RC(3,0)  RC(2,1)  RC(3,1)  RC(2,2)  RC(3,2)  RC(2,3)  RC(3,3)  RC(2,4)  RC(3,4)  RC(2,5)  RC(3,5)  RC(2,6)  RC(3,6)          RC(0,7)
			RC(4,0)  RC(5,0)  RC(4,1)  RC(5,1)  RC(4,2)  RC(5,2)  RC(4,3)  RC(5,3)  RC(4,4)  RC(5,4)  RC(4,5)  RC(5,5)  RC(4,6)  RC(5,6)          RC(0,8)
			RC(6,0)  RC(7,0)  RC(6,1)  RC(7,1)  RC(6,2)  RC(7,2)  RC(6,3)  RC(7,3)  RC(6,4)  RC(7,4)  RC(6,5)  RC(7,5)           RC(6,6)  	      RC(0,9)
			RC(8,0)           RC(8,1)  RC(9,1)  RC(8,2)  RC(9,2)  RC(8,3)  RC(9,3)  RC(8,4)  RC(9,4)  RC(8,5)  RC(9,5)  RC(8,6)  RC(9,6)
			RC(10,0) RC(11,0) RC(10,1) RC(11,1)                        RC(10,4)                       RC(11,4) RC(10,5) RC(11,5) RC(10,6) RC(11,6)
		>;
	};

 
	kscan: kscan_composite {
		compatible = "zmk,kscan-composite";
		label = "KSCAN0";
		rows = <12>;
        columns = <10>;

        toggle {
            kscan = <&kscan_toggle>;
			column-offset = <7>;

        };

        main {
            kscan = <&kscan_main>;
        };
	};

	kscan_toggle: kscan_toggle {
		compatible = "zmk,kscan-gpio-direct";
		label = "Toggle KSCAN";
        toggle-mode;
		input-gpios
			= <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			, <&gpio1 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			, <&gpio1 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
			;
	};

    kscan_main: kscan_main {
        compatible = "zmk,kscan-gpio-matrix";
		label = "Main KSCAN";
		diode-direction = "row2col";
		row-gpios
			= <&gpio1 1  GPIO_ACTIVE_HIGH>
			, <&gpio1 3  GPIO_ACTIVE_HIGH>
			, <&gpio1 4  GPIO_ACTIVE_HIGH>
			, <&gpio1 6  GPIO_ACTIVE_HIGH>
			, <&gpio0 9  GPIO_ACTIVE_HIGH>
			, <&gpio0 10 GPIO_ACTIVE_HIGH>
			, <&gpio0 31 GPIO_ACTIVE_HIGH>
			, <&gpio0 30 GPIO_ACTIVE_HIGH>
			, <&gpio0 29 GPIO_ACTIVE_HIGH>
			, <&gpio0 28 GPIO_ACTIVE_HIGH>
			, <&gpio0 2  GPIO_ACTIVE_HIGH>
			, <&gpio1 15 GPIO_ACTIVE_HIGH>
			;
		col-gpios
			= <&gpio0 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			, <&gpio1 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
			;
	};

	sensors {
    	compatible = "zmk,keymap-sensors";
    	sensors = <&left_encoder>;
	};

	left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        b-gpios = <&gpio1 00 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        a-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <2>;
    };

	vbatt: vbatt {
		compatible = "zmk,battery-voltage-divider";
		label = "VBATT";
		io-channels = <&adc 1>;
		output-ohms = <2000000>;
		full-ohms = <(2000000 + 820000)>;
	};
};

&adc {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&usbd {
	status = "okay";
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "softdevice";
			reg = <0x00000000 0x00026000>;
		};
		code_partition: partition@26000 {
			label = "code_partition";
			reg = <0x00026000 0x000c6000>;
		};

		/*
		 * The flash starting at 0x000ec000 and ending at
		 * 0x000f3fff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@ec000 {
			label = "storage";
			reg = <0x000ec000 0x00008000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};